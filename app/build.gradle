plugins {
    id 'com.android.application'
    id 'androidx.navigation.safeargs'
    id 'com.google.gms.google-services'
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'jacoco'

android {
    compileSdk 34
    namespace "com.unimib.eden"

    defaultConfig {
        applicationId "com.unimib.eden"
        minSdk 21
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            // for instrumented test
            testCoverageEnabled = true
            // for unit test
            //testCoverageEnabled = false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    buildFeatures {
        viewBinding true
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
    }
    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
            testLogging {
                events "passed", "skipped", "failed"
            }
        }
    }
}

jacoco {
    toolVersion = "0.8.7"  // You can use the latest version
}

task jacocoTestReport(type: JacocoReport) {
    dependsOn 'testDebugUnitTest'

    reports {
        xml {enabled  true}
        html {enabled  true}
    }

    def fileFilter = [
            '**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*',
            '**/*Test*.*', 'android/**/*.*'
    ]

    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    //java compiled classes
    def javaTree = fileTree(dir: "$project.buildDir/intermediates/javac/debug", excludes: fileFilter)
    //kotlin compiled classes
    def kotlinTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([javaTree])
    executionData = fileTree(dir: project.buildDir, includes: [
            'jacoco/testReleaseUnitTest.exec', 'outputs/code_coverage/debugAndroidTest/connected/*coverage.ec'
    ])
}
tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}


dependencies {

    implementation 'androidx.appcompat:appcompat:+'
    implementation 'com.google.android.material:material:+'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.4.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.navigation:navigation-fragment:2.3.5'
    implementation 'androidx.navigation:navigation-ui:2.3.5'

    implementation 'androidx.arch.core:core-testing:2.1.0'
    implementation 'androidx.room:room-runtime:2.6.1'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    annotationProcessor 'androidx.room:room-compiler:2.6.1'


    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:+'
    implementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'

    implementation 'com.google.code.gson:gson:2.8.9'

    implementation 'com.google.firebase:firebase-auth:22.3.1'
    implementation 'com.google.firebase:firebase-firestore:24.11.0'
    implementation 'com.google.firebase:firebase-database:20.3.1'
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.firebase:geofire-android-common:3.1.0'
    implementation(platform("com.google.firebase:firebase-bom:32.8.0"))

    testImplementation 'org.mockito:mockito-core:3.11.2'
    testImplementation 'org.robolectric:robolectric:4.12'

    def room_version = "2.4.0"

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    implementation platform('com.google.firebase:firebase-bom:29.0.1')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-firestore'
    implementation 'com.firebase:geofire-android-common:3.1.0'

    implementation 'com.google.android.gms:play-services-auth:20.0.0'
    implementation 'com.google.android.gms:play-services-location:19.0.0'


    def nav_version = "2.7.7"

    // Java language implementation
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"

    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    // Jetpack Compose Integration
    implementation "androidx.navigation:navigation-compose:$nav_version"
}